function classNames(...classes) {
  // write your code here
  return classes.reduce((acc, claas) => {
    if (!Boolean(claas)) return acc;
    let suffix = acc ? " " : "";
    if (Array.isArray(claas)) return acc + suffix + classNames(...claas);

    if (typeof claas === "object") {
      for (var key in claas) {
        if (claas[key] === true) {
          acc += suffix + key;
          suffix = " ";
        }
      }
      return acc;
    }
    return acc + suffix + claas;
  }, "");
}

<p className="classname1 classname2">Devtools Tech</p>;

<p className={`${shouldAddClassOne ? "classname1" : ""}  classname2`}>
  Devtools Tech
</p>;

classNames("foo", "bar"); // => 'foo bar'
classNames("foo", { bar: true }); // => 'foo bar'
classNames({ "foo-bar": true }); // => 'foo-bar'
classNames({ "foo-bar": false }); // => ''
classNames({ foo: true }, { bar: true }); // => 'foo bar'
classNames({ foo: true, bar: true }); // => 'foo bar'

// lots of arguments of various types
classNames("foo", { bar: true, duck: false }, "baz", { quux: true }); // => 'foo bar baz quux'

// other falsy values are just ignored
classNames(null, false, "bar", undefined, 0, 1, { baz: null }, ""); // => 'bar 1'

// Arrays are recursively flattened
var arr = ["b", { c: true, d: false }];
classNames("a", arr); // => 'a b c'
